#!/usr/bin/perl

use strict;
use URI::Escape;

# Script to extract any Alteration and Validation records found and convert them to esmond links.

# Usage:
# getlinks throughput_psds1_verify.log throughput psds1.grid.iu.edu
# getlinks throughput_psds-itb_verify.log throughput psds-itb.grid.iu.edu
# getlinks throughput_fermicloud_verify.log throughput fermicloud035.fnal.gov:9090

# getlinks owdelay_psds1_verify.log histogram-owdelay psds1.grid.iu.edu
# getlinks owdelay_psds-itb_verify.log histogram-owdelay psds-itb.grid.iu.edu
# getlinks owdelay_fermicloud_verify.log histogram-owdelay fermicloud035.fnal.gov:9090

my $file    = $ARGV[0];
my $ma      = $ARGV[1];
my $central = $ARGV[2];

open( FH, "$file" );

my @f    = ();
my $time = undef;
my $mon  = undef;
my $mk   = undef;
my $uri  = undef;
my $encoded_mon = undef;
while (<FH>) {
    if ( $_ =~ m/Comparing/ ) {
        print $_;
        while (<FH>) {
            if ( $_ !~ m/Coverage/ ) {
                print $_ if ( $_ !~ m/^c:/ && $_ !~ m/^r:/ );
                if ( $_ =~ m/^r:/ ) {
                    @f = split(' ', $_);
                    $mk = $f[2];
                    @f = split(',', $f[1]);
                    $time = $f[0];
                    $mon = $f[2];
                    $encoded_mon = uri_escape($mon);
                    $uri="http://$encoded_mon/esmond/perfsonar/archive/$mk/$ma/base\?time-start=$time\&time-end=$time\&format=json";
                    print "$uri\n\n";
                }
                if ( $_ =~ m/^c:/ ) {
                    @f = split(' ', $_);
                    $mk = $f[2];
                    @f = split(',', $f[1]);
                    $time = $f[0];
                    $mon = $f[2];
                    $encoded_mon = uri_escape($mon);
                    $uri="http://$central/esmond/perfsonar/archive/$mk/$ma/base\?time-start=$time\&time-end=$time\&format=json";
                    print "$uri\n";
                }
            } else {
                last;
            }
        }
    }
}
